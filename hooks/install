#!/bin/bash

set -e

repository=`config-get repository`
branch=`config-get branch`
branch=${branch:-master}
tag=`config-get release`

apt-get install -qy ruby1.9.3 git-core build-essential libxml2-dev \
  libxslt1-dev libpq-dev nginx redis-server postgresql-client-common \
  postgresql-client-9.1 sendmail libtcmalloc-minimal0

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

juju-log "Bundler ho!"
gem install bundler foreman

set +e
id discourse
user_exists=$?
set -e

if [ $user_exists -gt 0 ]; then
  juju-log "Create discourse user"
  adduser --disabled-password --gecos 'Discourse' discourse
fi

juju-log "Placing nginx configuration files"
rsync -az contrib/nginx/ /etc/nginx/sites-available/
rm -f /etc/nginx/sites-enabled/default

if [ ! -e /etc/nginx/sites-enabled/discourse ]; then
  ln -s ../sites-available/discourse /etc/nginx/sites-enabled/discourse
fi

service nginx restart

if [ -d "/home/discourse/discourse" ]; then
  juju-log "Updating repository..."
  cd /home/discourse/discourse
  sudo -u discourse -H git fetch

  current_branch=$(git symbolic-ref -q HEAD)
  current_branch_name=${branch_name##refs/heads/}
  current_tag=$(git describe)

  if [ "$current_tag" != "$tag" ] && [ ! -z "$tag" ]; then
    juju-log "Placing $branch branch at $tag"
    git reset --hard $tag
    touch $CHARM_DIR/.migrate
  else
    if [ "$current_branch_name" != "$branch" ]; then
      juju-log "Moving current repository to $branch"
      if git for-each-ref --format "%(refname:short)" refs/heads/ | grep -Eq "^$branch$"; then
        juju-log "We already have this branch branched. Switch and pull"
        git branch -D $branch
      fi
      juju-log "Branching $branch"
      git checkout -b $branch origin/$branch

      touch $CHARM_DIR/.migrate
    else
      git pull
    fi
  fi

  rm -f .foreman
else
  juju-log "Fetching source from $repository..."
  sudo -u discourse -H git clone $repository /home/discourse/discourse
  cd /home/discourse/discourse

  if [ ! -z "$tag" ]; then
    juju-log "Checkout out $tag tag"
    git checkout $tag
  else
    current_branch=$(git symbolic-ref -q HEAD)
    current_branch_name=${branch_name##refs/heads/}

    if [ "$current_branch_name" != "$branch" ]; then
      juju-log "Moving new repository to $branch"
      git checkout -b $branch origin/$branch
    fi
  fi

  sudo -u discourse -H cp config/redis.yml.sample config/redis.yml
  mkdir -p ../.backup
fi

if [ ! -f .foreman ]; then
  cp .procfile.sample .foreman
fi

if [ ! -f config/environments/production.rb ]; then
  cp config/environments/production.rb.sample config/environments/production.rb
fi

export RAILS_ENV="production"

juju-log "Bundle install"
sudo -u discourse -H bundle install --deployment

if [ -f $CHARM_DIR/.secret_token ]; then
  juju-log "Loading secret token"
  token=`cat $CHARM_DIR/.secret_token`
else
  juju-log "Creating secret token"
  token=`sudo -u discourse -H bundle exec rake secret`
  echo "$token" > $CHARM_DIR/.secret_token
fi

if [ -f "/etc/init/discoruse.conf" ]; then
  juju-log "Replacing old discourse upstart"
  rm -f /etc/init/discoruse.conf
fi

. $CHARM_DIR/lib/file.bash

juju-log "Installing upstart script"
rails_env=`config-get env | sed -e "s/ /\nenv /g" -e "s/^/env /"`
ch_template_file 0644 root:root $CHARM_DIR/contrib/upstart/discourse.conf.tpl /etc/init/discourse.conf rails_env token

cd $CHARM_DIR

chown -R discourse.discourse /home/discourse/discourse
juju-log "Installed/Upgraded"
