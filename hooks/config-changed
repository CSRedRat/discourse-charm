#!/bin/bash

set -ex

admins=`config-get admins`
webs=`config-get thins`

potential_admins=`echo "$admins" | tr -d ' ' | tr -d "'" | sed 's/,/ /g'`

if [ ! -f ".psql" ]; then
  juju-log "Waiting for a database"
  exit 0
fi

source $CHARM_DIR/.psql

export PGPASSWORD=$db_pass

if [ ! -z "$potential_admins" ]; then
  for i in ${potential_admins}; do
    juju-log "Attempting to add admin for $i"
    echo "UPDATE users SET admin=true WHERE username='$i'" | psql -h $db_host -U $db_user $db_dbdb
  done
fi

current_repository=`git config --get -f /home/discourse/discourse/.git/config remote.origin.url`
repository=`config-get repository`

if [ "$current_repository" != "$repository" ]; then
  # Yikes, they want to really blow this up. Lets try a live migration!
  # Move installation out of the way, so we can re-do the whole setup thing.
  hooks/stop
  mv /home/discourse/discourse /home/discourse/.backup/$(date "+%Y%m%d-%H%M")
  touch $CHARM_DIR/.migrate
fi

hooks/install

if [ -f "$CHARM_DIR/.migrate" ]; then
  cd /home/discourse/discourse
  rm -f $CHARM_DIR/.migrate

  $CHARM_DIR/hooks/stop

  export RAILS_ENV="production"
  export SECRET_TOKEN=`cat $CHARM_DIR/.secret_token`

  juju-log "Database migrate"
  sudo -u discourse -H bundle exec rake db:migrate SECRET_TOKEN=`cat $CHARM_DIR/.secret_token` RAILS_ENV="production"

  juju-log "Re-create assets"
  sudo -u discourse -H bundle exec rake assets:clean SECRET_TOKEN=`cat $CHARM_DIR/.secret_token` RAILS_ENV="production"
  sudo -u discourse -H bundle exec rake assets:precompile SECRET_TOKEN=`cat $CHARM_DIR/.secret_token` RAILS_ENV="production"
  cd $CHARM_DIR

  $CHARM_DIR/hooks/start
fi


if [ -f /etc/default/discourse ]; then
  . /etc/default/discourse
else
  THINS=0
fi

if [ "$webs" == "auto" ]; then
  # Count the RAM and CPU. Find the lowest and get a number. 1 RAM/CPU = 1 THIN. Miniumum 1
  ram=$(expr `cat /proc/meminfo | grep MemTotal | awk '{print $2}'` / `expr 1024 * 1024`)
  cpu=`nproc`

  if [ $ram -gt $cpu ]; then
    webs=$cpu
  else
    webs=$ram
  fi

  if [ $webs -le 0 ]; then
    webs=1
  fi
fi

if [ $THINS -ne $webs ]; then
  cat <<EOD > /etc/default/discourse
THINS=$webs
START_PORT=3000
EOD

  for i in `initctl list | grep ^discourse-web` | awk '{print $2}' | tr -d ')' | tr -d '('`; do
    juju-log "Stopping discourse-web on $i port"
    stop discourse-web PORT=$i
  done

  juju-log "Re-starting discourse thins"
  start discourse-webs
fi
